import type { Metadata } from "next";
import { Geist, Geist_Mono, Oswald, Roboto } from "next/font/google";
import "./globals.css";

import StoreProvider from "@/StoreProvider";
import Navbar from "./components/nav/Navbar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const oswald = Oswald({
  variable: "--font-oswald",
  subsets: ["latin"],
});

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: "400"
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Define the layout component
export default async function RootLayout({
  children,
  params, // Accept params directly
}: {
  children: React.ReactNode;
  params: Promise<{ slug: string[]}>; // Adjust based on your routing structure
}) {
  // Check if the current path is the root
  const {slug} = await params;
  // console.log(Boolean(slug));
  

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${oswald.variable} ${roboto.variable} antialiased`}
      >
        <StoreProvider>
          {/* Conditionally render Navbar based on the current path */}
          {slug && <Navbar />}
          {children}
        </StoreProvider>
      </body>
    </html>
  );
}